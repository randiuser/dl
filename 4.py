# -*- coding: utf-8 -*-
"""4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15K-d8thoOZl928p6u5z8bhH-tWjqzvP1
"""

import cv2
import numpy as np

# Histogram equalization
def histogram_equalization(image):
    return cv2.equalizeHist(image)

# Thresholding
def thresholding(image, threshold):
    _, thresholded = cv2.threshold(image, threshold, 255, cv2.THRESH_BINARY)
    return thresholded

# Edge detection (Canny)
def edge_detection(image, lower_threshold, upper_threshold):
    return cv2.Canny(image, lower_threshold, upper_threshold)

# Data augmentation (rotation)
def rotate_image(image, angle):
    rows, cols = image.shape[:2]
    rotation_matrix = cv2.getRotationMatrix2D((cols//2, rows//2), angle, 1)
    return cv2.warpAffine(image, rotation_matrix, (cols, rows))

# Morphological operations (erosion and dilation)
def morphological_operations(image, kernel_size):
    kernel = np.ones((kernel_size, kernel_size), np.uint8)
    eroded = cv2.erode(image, kernel)
    dilated = cv2.dilate(image, kernel)
    return eroded, dilated

